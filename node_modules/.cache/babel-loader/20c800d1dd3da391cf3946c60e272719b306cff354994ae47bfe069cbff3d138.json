{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win 11\\\\Desktop\\\\portfolio-app\\\\client\\\\src\\\\pages\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [form] = Form.useForm();\n  const onFinish = values => {\n    console.log('Form values:', values);\n    // Here you would typically send the data to your backend\n    // For now, we'll just show a success message\n    message.success('Message sent successfully!');\n    form.resetFields(); // Clear the form after submission\n  };\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n    message.error('Please fill out all required fields correctly.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-page\",\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '24px'\n      },\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      layout: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"name\",\n        label: \"Name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"Email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }, {\n          type: 'email',\n          message: 'Please enter a valid email address!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"message\",\n        label: \"Message\",\n        rules: [{\n          required: true,\n          message: 'Please input your message!'\n        }, {\n          min: 10,\n          message: 'Message must be at least 10 characters long!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          block: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","Form","Input","Button","message","jsxDEV","_jsxDEV","Contact","_s","form","useForm","onFinish","values","console","log","success","resetFields","onFinishFailed","errorInfo","error","className","style","maxWidth","margin","padding","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","layout","Item","name","label","rules","required","type","min","TextArea","rows","htmlType","block","_c","$RefreshReg$"],"sources":["C:/Users/Win 11/Desktop/portfolio-app/client/src/pages/Contact.js"],"sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\n\r\nconst Contact = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Form values:', values);\r\n    // Here you would typically send the data to your backend\r\n    // For now, we'll just show a success message\r\n    message.success('Message sent successfully!');\r\n    form.resetFields(); // Clear the form after submission\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    message.error('Please fill out all required fields correctly.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-page\" style={{ maxWidth: '600px', margin: '0 auto', padding: '24px' }}>\r\n      <h1 style={{ textAlign: 'center', marginBottom: '24px' }}>Contact Me</h1>\r\n      <Form\r\n        form={form}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your email!',\r\n            },\r\n            {\r\n              type: 'email',\r\n              message: 'Please enter a valid email address!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"message\"\r\n          label=\"Message\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your message!',\r\n            },\r\n            {\r\n              min: 10,\r\n              message: 'Message must be at least 10 characters long!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}