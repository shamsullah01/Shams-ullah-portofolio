{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win 11\\\\Desktop\\\\portfolio-app\\\\client\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Row, Col, Button, Form, Input, InputNumber, Modal, Typography, Upload, message } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined, UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([{\n    id: 1,\n    title: 'Project 1',\n    description: 'Description of project 1',\n    year: 2024,\n    imageUrl: ''\n  }, {\n    id: 2,\n    title: 'Project 2',\n    description: 'Description of project 2',\n    year: 2023,\n    imageUrl: ''\n  }]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editingProject, setEditingProject] = useState(null);\n  const [form] = Form.useForm();\n  const [imagePreview, setImagePreview] = useState('');\n  const showModal = (project = null) => {\n    setEditingProject(project);\n    if (project) {\n      form.setFieldsValue(project);\n      setImagePreview(project.imageUrl);\n    } else {\n      form.resetFields();\n      setImagePreview('');\n    }\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setEditingProject(null);\n    form.resetFields();\n    setImagePreview('');\n  };\n  const onFinish = values => {\n    if (editingProject) {\n      setProjects(projects.map(p => p.id === editingProject.id ? {\n        ...p,\n        ...values,\n        imageUrl: imagePreview\n      } : p));\n      message.success('Project updated successfully');\n    } else {\n      const newProject = {\n        id: Date.now(),\n        ...values,\n        imageUrl: imagePreview || 'https://via.placeholder.com/300x200?text=No+Image'\n      };\n      setProjects([...projects, newProject]);\n      message.success('Project added successfully');\n    }\n    handleCancel();\n  };\n  const deleteProject = id => {\n    setProjects(projects.filter(p => p.id !== id));\n    message.success('Project deleted successfully');\n  };\n  const handleImageChange = info => {\n    if (info.file.status === 'done') {\n      // Get the uploaded image URL (in a real app, this would come from your server)\n      const imageUrl = URL.createObjectURL(info.file.originFileObj);\n      setImagePreview(imageUrl);\n    }\n  };\n  const dummyRequest = ({\n    file,\n    onSuccess\n  }) => {\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-page\",\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 1,\n      style: {\n        textAlign: 'center',\n        marginBottom: '24px'\n      },\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this),\n      onClick: () => showModal(),\n      style: {\n        marginBottom: '24px'\n      },\n      children: \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          cover: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '160px',\n              overflow: 'hidden',\n              background: '#f0f0f0'\n            },\n            children: project.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: project.title,\n              src: project.imageUrl,\n              style: {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              },\n              onError: e => {\n                e.target.src = 'https://via.placeholder.com/300x200?text=Image+Not+Found';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: '#999'\n              },\n              children: \"No Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this),\n          actions: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n            onClick: () => showModal(project)\n          }, \"edit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            onClick: () => deleteProject(project.id)\n          }, \"delete\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            title: project.title,\n            description: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                children: project.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  marginTop: '8px'\n                },\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: editingProject ? \"Edit Project\" : \"Add New Project\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      footer: null,\n      width: 800,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"title\",\n              label: \"Project Title\",\n              rules: [{\n                required: true,\n                message: 'Please input project title!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Enter project title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"year\",\n              label: \"Year\",\n              rules: [{\n                required: true,\n                message: 'Please input project year!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                style: {\n                  width: '100%'\n                },\n                min: 2000,\n                max: new Date().getFullYear(),\n                placeholder: \"Enter project year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"description\",\n              label: \"Description\",\n              rules: [{\n                required: true,\n                message: 'Please input project description!'\n              }],\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                rows: 4,\n                placeholder: \"Enter project description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"imageUrl\",\n              label: \"Image URL\",\n              extra: \"Paste an image URL or upload an image below\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"https://example.com/image.jpg\",\n                onChange: e => setImagePreview(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '300px',\n                border: '1px dashed #d9d9d9',\n                borderRadius: '4px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: imagePreview ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePreview,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: '100%',\n                  maxHeight: '100%',\n                  objectFit: 'contain'\n                },\n                onError: e => {\n                  e.target.src = 'https://via.placeholder.com/300x200?text=Invalid+Image';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                children: \"Image Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Upload, {\n              name: \"image\",\n              customRequest: dummyRequest,\n              listType: \"picture\",\n              showUploadList: false,\n              onChange: handleImageChange,\n              beforeUpload: file => {\n                const isImage = file.type.startsWith('image/');\n                if (!isImage) {\n                  message.error('You can only upload image files!');\n                }\n                return isImage;\n              },\n              style: {\n                marginTop: '16px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 31\n                }, this),\n                children: \"Upload Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            marginTop: '24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              marginRight: '8px'\n            },\n            children: [editingProject ? 'Update' : 'Add', \" Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '40px',\n        color: '#666'\n      },\n      children: [\"Portfolio \\xA9\", new Date().getFullYear(), \" Created by You\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"LL8huP3ZU289RgrsGouSS+/Pjco=\", false, function () {\n  return [Form.useForm];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Card","Row","Col","Button","Form","Input","InputNumber","Modal","Typography","Upload","message","PlusOutlined","EditOutlined","DeleteOutlined","UploadOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Text","TextArea","Projects","_s","projects","setProjects","id","title","description","year","imageUrl","isModalVisible","setIsModalVisible","editingProject","setEditingProject","form","useForm","imagePreview","setImagePreview","showModal","project","setFieldsValue","resetFields","handleCancel","onFinish","values","map","p","success","newProject","Date","now","deleteProject","filter","handleImageChange","info","file","status","URL","createObjectURL","originFileObj","dummyRequest","onSuccess","setTimeout","className","style","padding","children","level","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","icon","onClick","gutter","xs","sm","md","lg","cover","height","overflow","background","alt","src","width","objectFit","onError","e","target","display","alignItems","justifyContent","color","actions","Meta","marginTop","visible","onCancel","footer","layout","span","Item","name","label","rules","required","placeholder","min","max","getFullYear","rows","extra","onChange","value","border","borderRadius","flexDirection","maxWidth","maxHeight","customRequest","listType","showUploadList","beforeUpload","isImage","startsWith","error","htmlType","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Win 11/Desktop/portfolio-app/client/src/pages/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  Row, \r\n  Col, \r\n  Button, \r\n  Form, \r\n  Input, \r\n  InputNumber, \r\n  Modal, \r\n  Typography, \r\n  Upload, \r\n  message \r\n} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([\r\n    { \r\n      id: 1, \r\n      title: 'Project 1', \r\n      description: 'Description of project 1', \r\n      year: 2024,\r\n      imageUrl: ''\r\n    },\r\n    { \r\n      id: 2, \r\n      title: 'Project 2', \r\n      description: 'Description of project 2', \r\n      year: 2023,\r\n      imageUrl: ''\r\n    }\r\n  ]);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingProject, setEditingProject] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [imagePreview, setImagePreview] = useState('');\r\n\r\n  const showModal = (project = null) => {\r\n    setEditingProject(project);\r\n    if (project) {\r\n      form.setFieldsValue(project);\r\n      setImagePreview(project.imageUrl);\r\n    } else {\r\n      form.resetFields();\r\n      setImagePreview('');\r\n    }\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setEditingProject(null);\r\n    form.resetFields();\r\n    setImagePreview('');\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (editingProject) {\r\n      setProjects(projects.map(p => \r\n        p.id === editingProject.id ? { ...p, ...values, imageUrl: imagePreview } : p\r\n      ));\r\n      message.success('Project updated successfully');\r\n    } else {\r\n      const newProject = {\r\n        id: Date.now(),\r\n        ...values,\r\n        imageUrl: imagePreview || 'https://via.placeholder.com/300x200?text=No+Image'\r\n      };\r\n      setProjects([...projects, newProject]);\r\n      message.success('Project added successfully');\r\n    }\r\n    handleCancel();\r\n  };\r\n\r\n  const deleteProject = (id) => {\r\n    setProjects(projects.filter(p => p.id !== id));\r\n    message.success('Project deleted successfully');\r\n  };\r\n\r\n  const handleImageChange = (info) => {\r\n    if (info.file.status === 'done') {\r\n      // Get the uploaded image URL (in a real app, this would come from your server)\r\n      const imageUrl = URL.createObjectURL(info.file.originFileObj);\r\n      setImagePreview(imageUrl);\r\n    }\r\n  };\r\n\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-page\" style={{ padding: '24px' }}>\r\n      <Title level={1} style={{ textAlign: 'center', marginBottom: '24px' }}>My Projects</Title>\r\n      \r\n      <Button \r\n        type=\"primary\" \r\n        icon={<PlusOutlined />} \r\n        onClick={() => showModal()}\r\n        style={{ marginBottom: '24px' }}\r\n      >\r\n        Add New Project\r\n      </Button>\r\n\r\n      <Row gutter={[16, 16]}>\r\n        {projects.map((project) => (\r\n          <Col key={project.id} xs={24} sm={12} md={8} lg={6}>\r\n            <Card \r\n              cover={\r\n                <div style={{ height: '160px', overflow: 'hidden', background: '#f0f0f0' }}>\r\n                  {project.imageUrl ? (\r\n                    <img \r\n                      alt={project.title} \r\n                      src={project.imageUrl} \r\n                      style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n                      onError={(e) => {\r\n                        e.target.src = 'https://via.placeholder.com/300x200?text=Image+Not+Found';\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div style={{\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      color: '#999'\r\n                    }}>\r\n                      No Image\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              }\r\n              actions={[\r\n                <EditOutlined key=\"edit\" onClick={() => showModal(project)} />,\r\n                <DeleteOutlined key=\"delete\" onClick={() => deleteProject(project.id)} />\r\n              ]}\r\n            >\r\n              <Card.Meta\r\n                title={project.title}\r\n                description={\r\n                  <>\r\n                    <Text type=\"secondary\">{project.year}</Text>\r\n                    <p style={{ marginTop: '8px' }}>{project.description}</p>\r\n                  </>\r\n                }\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      {/* Project Form Modal */}\r\n      <Modal \r\n        title={editingProject ? \"Edit Project\" : \"Add New Project\"} \r\n        visible={isModalVisible} \r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        width={800}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name=\"title\"\r\n                label=\"Project Title\"\r\n                rules={[{ required: true, message: 'Please input project title!' }]}\r\n              >\r\n                <Input placeholder=\"Enter project title\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"year\"\r\n                label=\"Year\"\r\n                rules={[{ required: true, message: 'Please input project year!' }]}\r\n              >\r\n                <InputNumber \r\n                  style={{ width: '100%' }} \r\n                  min={2000} \r\n                  max={new Date().getFullYear()} \r\n                  placeholder=\"Enter project year\" \r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[{ required: true, message: 'Please input project description!' }]}\r\n              >\r\n                <TextArea rows={4} placeholder=\"Enter project description\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"imageUrl\"\r\n                label=\"Image URL\"\r\n                extra=\"Paste an image URL or upload an image below\"\r\n              >\r\n                <Input \r\n                  placeholder=\"https://example.com/image.jpg\" \r\n                  onChange={(e) => setImagePreview(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <div style={{ \r\n                height: '300px', \r\n                border: '1px dashed #d9d9d9',\r\n                borderRadius: '4px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n              }}>\r\n                {imagePreview ? (\r\n                  <img \r\n                    src={imagePreview} \r\n                    alt=\"Preview\" \r\n                    style={{ \r\n                      maxWidth: '100%', \r\n                      maxHeight: '100%',\r\n                      objectFit: 'contain'\r\n                    }}\r\n                    onError={(e) => {\r\n                      e.target.src = 'https://via.placeholder.com/300x200?text=Invalid+Image';\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Text type=\"secondary\">Image Preview</Text>\r\n                )}\r\n              </div>\r\n\r\n              <Upload\r\n                name=\"image\"\r\n                customRequest={dummyRequest}\r\n                listType=\"picture\"\r\n                showUploadList={false}\r\n                onChange={handleImageChange}\r\n                beforeUpload={(file) => {\r\n                  const isImage = file.type.startsWith('image/');\r\n                  if (!isImage) {\r\n                    message.error('You can only upload image files!');\r\n                  }\r\n                  return isImage;\r\n                }}\r\n                style={{ marginTop: '16px' }}\r\n              >\r\n                <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n              </Upload>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item style={{ marginTop: '24px' }}>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '8px' }}>\r\n              {editingProject ? 'Update' : 'Add'} Project\r\n            </Button>\r\n            <Button onClick={handleCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <div style={{ textAlign: 'center', marginTop: '40px', color: '#666' }}>\r\n        Portfolio ©{new Date().getFullYear()} Created by You\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}